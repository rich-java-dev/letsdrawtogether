{"version":3,"sources":["components/MainView.js","utils/Drawing.js","components/MenuBar.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["canvas","useStyles","makeStyles","root","display","justifyContent","paintBar","flexDirection","alignItems","gap","cursorSize","width","serverAddr","process","SERVER_ADDR","wsEndPoint","WEBSOCKET_ENDPOINT","roomId","CLEAR_CANVAS_CMD","JSON","stringify","action","topic","window","innerWidth","height","innerHeight","color","hue","mouseDown","wsClient","canvasState","Set","diffState","clearFlag","prevX","prevY","init","fetchCanvasState","websockConnStr","console","log","WebSocket","onopen","onmessage","msg","data","parse","undefined","type","add","clear","postCircle","event","a","radius","rainbowMode","rect","getBoundingClientRect","x","Math","floor","clientX","left","y","clientY","top","touches","screenX","screenY","incHue","posX","posY","send","prevRad","sqrt","pow","cos","sin","i","interpolate","draw","ctx","clearLocalCanvas","Array","from","map","obj","props","beginPath","arc","PI","fillStyle","fill","strokeStyle","stroke","drawCircle","fillRect","clearCanvas","url","fetch","method","then","res","json","handleCanvasUp","evt","resizeCanvas","newWidth","newHeight","Canvas","match","classes","location","canvasRef","useRef","useState","setCursorSize","setRainbowMode","params","disableBodyScroll","addEventListener","handleCanvasDown","handleCanvasMove","useEffect","current","render","getContext","requestId","requestAnimationFrame","cancelAnimationFrame","Button","onClick","ref","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","className","onChange","newColor","hex","Box","TextField","value","label","variant","val","target","parseInt","err","Checkbox","toolBar","selectedItem","backgroundColor","modal","position","transform","bgcolor","border","boxShadow","p","MenuBar","history","useHistory","gotoLink","path","push","setAnchor","setLoadSaveAnchor","displayModal","setDisplayModal","topicId","setTopicId","AppBar","Toolbar","Typography","fontWeight","fontSize","Modal","open","onClose","cb","Function","id","sx","mt","currentTarget","avatar","maxWidth","maxHeight","typography","static_gaps","About","Avatar","alt","src","align","href","App","component","exact","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","CookiesProvider","document","getElementById"],"mappings":"6LA8CIA,E,iLA/BEC,EAAYC,YAAW,CAC3BC,KAAM,CACJC,QAAS,OACTC,eAAgB,iBAElBC,SAAU,CACRF,QAAS,OACTG,cAAe,MACfF,eAAgB,SAChBG,WAAY,SACZC,IAAK,QAEPC,WAAY,CACVC,MAAO,UAILC,EAAaC,mIAAYC,aAAe,wBACxCC,EAAaF,mIAAYG,oBAAsB,gBACjDC,EAAS,GACTC,EAAmBC,KAAKC,UAAU,CAAEC,OAAQ,QAASC,MAAOL,IAE5DN,EAAQY,OAAOC,WAAa,GAC5BC,EAASF,OAAOG,YAAc,IAE9BC,EAAQ,QACRC,EAAM,EAENC,GAAY,EAEZC,EAAW,KAKXC,GAFiB,IAAIC,IAEP,IAAIA,KAClBC,EAAY,IAAID,IAEhBE,GAAY,EAEZC,EAAQ,EACRC,EAAQ,EAENC,EAAO,WACXC,IAEA,IAAMC,EAAc,gBAAY3B,EAAZ,YAA0BG,GAC9CyB,QAAQC,IAAR,iDAAsDF,KACtDT,EAAW,IAAIY,UAAUH,IAEhBI,OAAS,WAChBH,QAAQC,IAAI,+BAGdX,EAASc,UAAY,SAACC,GACpB,IAAMC,EAAO3B,KAAK4B,MAAMF,EAAIC,MACXA,EAAKxB,QACLL,SAEE+B,KAAX,OAAJF,QAAI,IAAJA,OAAA,EAAAA,EAAMG,MAAoBhB,EAAUiB,IAAIJ,GAClB,WAAb,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMzB,UACbU,EAAYoB,QACZjB,GAAY,EACZM,QAAQC,IAAI,oBAKZW,EAAU,uCAAG,WAAOpD,EAAQqD,GAAf,+CAAAC,EAAA,sDAyBjB,GAzBuCC,EAAtB,+BAA+B,EAAGC,EAAlC,gCAGXC,EAAOzD,EAAO0D,wBAEhBC,EAAIC,KAAKC,MAAMR,EAAMS,QAAUL,EAAKM,MACpCC,EAAIJ,KAAKC,MAAMR,EAAMY,QAAUR,EAAKS,KAErB,cAAfb,EAAMJ,OACRU,EAAIN,EAAMc,QAAQ,GAAGC,QACrBJ,EAAIX,EAAMc,QAAQ,GAAGE,SAGvB1C,EAAQ6B,EAAcc,IAAW3C,EAE7BkB,EAAM,CACRvB,MAAOL,EACPgC,KAAM,SACNtB,MAAOA,EACP4B,OAAQA,EACRgB,KAAMZ,EACNa,KAAMR,GAERlC,EAAS2C,KAAKtD,KAAKC,UAAUyB,IAEzBhB,GAAaM,EAAQ,GAAKC,EAAQ,IAC9BsC,EAAUd,KAAKe,KAAKf,KAAKgB,IAAIjB,EAAIxB,EAAO,GAAKyB,KAAKgB,IAAIZ,EAAI5B,EAAO,KAEzD,EAMZ,KALe4B,EAAI5B,IAAUuB,EAAIxB,GAE3B0C,GAAOlB,EAAIxB,GAASuC,EACpBI,GAAOd,EAAI5B,GAASsC,EAEjBK,EAAI,EAAGA,GAAKL,EAAU,EAAGK,IAC5BC,EAAc,CAChB1D,MAAOL,EACPgC,KAAM,SACNtB,MAAOA,EACP4B,OAAQA,EACRgB,KAAMpC,EAAQ,EAAI4C,EAAIF,EACtBL,KAAMpC,EAAQ,EAAI2C,EAAID,GAExBhD,EAAS2C,KAAKtD,KAAKC,UAAU4D,IAKnC7C,EAAQwB,EACRvB,EAAQ4B,EAjDS,4CAAH,wDAoDViB,EAAO,SAACC,GACRhD,IACFM,QAAQC,IAAI,gBACZ0C,EAAiBD,GACjBhD,GAAY,GAKdkD,MAAMC,KAAKpD,GAAWqD,KAAI,SAACC,IChJH,SAACC,GACzB,IAAQN,EAAmCM,EAAnCN,IAAKX,EAA8BiB,EAA9BjB,KAAMC,EAAwBgB,EAAxBhB,KAAMjB,EAAkBiC,EAAlBjC,OAAQ5B,EAAU6D,EAAV7D,MAEjCuD,EAAIO,YACJP,EAAIQ,IAAInB,EAAMC,EAAMjB,EAAQ,EAAG,EAAIK,KAAK+B,IACxCT,EAAIU,UAAYjE,EAChBuD,EAAIW,OACJX,EAAIY,YAAcnE,EAClBuD,EAAIa,SDyIFC,CAAW,aACTd,OACGK,OAIPxD,EAAc,IAAIC,IAAJ,sBAAYD,GAAZ,YAA4BE,KAC1CA,EAAY,IAAID,KASZmD,EAAmB,SAACD,GACxB1C,QAAQC,IAAI,uBACZyC,EAAIU,UAAY,QAChBV,EAAIe,SAAS,EAAG,EAAGjG,EAAOW,MAAOX,EAAOyB,SAG7ByE,EAAc,WACzBpE,EAAS2C,KAAKvD,IAKVoB,EAAmB,WACvB,IAAM6D,EAAG,8DAA0DlF,GACnEmF,MAAMD,EAAK,CACTE,OAAQ,QAEPC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACE,GACLA,EAAKlB,KAAI,SAAChC,GAAD,OAAOrB,EAAUiB,IAAII,UAO9BgB,EAAS,WAGb,OAFA1C,GAAO,GACG,MAAKA,GAAO,KAChB,OAAN,OAAcA,EAAd,iBAKI6E,EAAiB,SAACzG,EAAQ0G,GAC9B7E,GAAY,EACZM,EAAQ,EACRC,EAAQ,GAKJuE,EAAe,SAAC3G,EAAQ4G,EAAUC,GACtC7G,EAAOW,MAAQiG,EACf5G,EAAOyB,OAASoF,EAChBlG,EAAQiG,EACRnF,EAASoF,GAKEC,EAAS,SAAC,GAAyB,IAAD,EAAtBC,EAAsB,EAAtBA,MACjBC,GADuC,EAAfC,SACdhH,KACViH,EAAYC,mBAElB,EAAoCC,mBAAS,GAA7C,mBAAO1G,EAAP,KAAmB2G,EAAnB,KACA,EAAsCD,oBAAS,GAA/C,mBAAO5D,EAAP,KAAoB8D,EAApB,UAE8BtE,KAArB,OAAL+D,QAAK,IAALA,GAAA,UAAAA,EAAOQ,cAAP,eAAetG,UAAsBA,EAAS8F,EAAMQ,OAAOtG,QAC/DC,EAAmBC,KAAKC,UAAU,CAAEC,OAAQ,QAASC,MAAOL,IAE5DuG,YAAkBN,GAClB3F,OAAOkG,iBAAiB,SAAUd,GAAc,GAGhD,IAkBMe,EAAgB,uCAAG,WAAO1H,EAAQ0G,GAAf,SAAApD,EAAA,sDACvBF,EAAWpD,EAAQ0G,EAAKhG,EAAY8C,GACpC3B,GAAY,EAFW,2CAAH,wDAMhB8F,EAAgB,uCAAG,WAAO3H,EAAQ0G,GAAf,SAAApD,EAAA,sDACnBzB,GACFuB,EAAWpD,EAAQ0G,EAAKhG,EAAY8C,GAFf,2CAAH,wDAgCtB,OAzBAoE,oBAAS,sBAAC,8BAAAtE,EAAA,6DACRjB,IAEArC,EAASkH,EAAUW,QAKbC,EARE,+BAAAxE,EAAA,MAQO,4BAAAA,EAAA,sDACC/B,OAAOC,WAAa,GACnBD,OAAOG,YAAc,IAG9BwD,EAAMlF,EAAO+H,WAAW,MAC9B9C,EAAKC,GACL8C,EAAYC,sBAAsBH,GAPrB,2CARP,8DAkBFA,IAlBE,iCAmBD,WACLI,qBAAqBF,MApBf,4CA0BR,gCACE,cAACG,EAAA,EAAD,CAAQC,QAASlC,EAAjB,0BAEA,wBACEmC,IAAKnB,EACLvG,MAAOA,EACPc,OAAQA,EACR6G,YAAa,SAAC5B,GAAD,OAASgB,EAAiB1H,EAAQ0G,IAC/C6B,YAAa,SAAC7B,GAAD,OAASiB,EAAiB3H,EAAQ0G,IAC/C8B,UAAW,SAAC9B,GAAD,OAASD,KACpBgC,aAAc,SAAC/B,GAAD,OAASD,KACvBiC,aAAc,SAAChC,GAAD,OAASgB,EAAiB1H,EAAQ0G,IAChDiC,YAAa,SAACjC,GAAD,OAASiB,EAAiB3H,EAAQ0G,IAC/CkC,WAAY,SAAClC,GAAD,OAASD,OAGvB,sBAAKoC,UAAW7B,EAAQ1G,SAAxB,UACE,cAAC,IAAD,CAAewI,SA1ED,SAACC,EAAUrC,GAC7B/E,EAAQoH,EAASC,OA2Eb,wBACA,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEL,UAAW7B,EAAQtG,WACnByI,MAAOzI,EACP0I,MAAM,cACNC,QAAQ,WACRP,SA9Ee,SAACpC,GACxB,IAAM4C,EAAM5C,EAAI6C,OAAOJ,MACvB,IACE9B,EAAcmC,SAASF,IACvB,MAAOG,QA6EH,cAACC,EAAA,EAAD,CACEP,MAAO3F,EACP4F,MAAM,eACNN,SA5EgB,WACxBxB,GAAgB9D,gB,6CE7NdvD,GAAYC,YAAW,CAC3ByJ,QAAS,CACPvJ,QAAS,OACTC,eAAgB,iBAElBuJ,aAAc,CACZjI,MAAO,OACPkI,gBAAiB,QAGnBC,MAAO,CACLC,SAAU,WACV7F,IAAK,MACLH,KAAM,MACNiG,UAAW,wBACXrJ,MAAO,IACPsJ,QAAS,mBACTC,OAAQ,iBACRC,UAAW,GACXC,EAAG,KAIMC,GAAU,SAAC7E,GACtB,IAAMwB,EAAU/G,KACVqK,EAAUC,cACVC,EAAW,SAACC,GAAD,OAAUH,EAAQI,KAAKD,IAExC,EAA4BrD,mBAAS,MAArC,mBAAeuD,GAAf,WACA,EAA4CvD,mBAAS,MAArD,mBAAuBwD,GAAvB,WACA,EAAwCxD,oBAAS,GAAjD,mBAAOyD,EAAP,KAAqBC,EAArB,KAEA,EAA8B1D,mBAAS,IAAvC,mBAAO2D,EAAP,KAAgBC,EAAhB,KAgBA,OACE,8BACE,cAACC,EAAA,EAAD,CAAQlB,SAAS,SAASpI,MAAM,UAAhC,SACE,eAACuJ,EAAA,EAAD,CAASrC,UAAW7B,EAAQ2C,QAA5B,UACE,cAACwB,EAAA,EAAD,UACE,cAAClC,EAAA,EAAD,CAAKmC,WAAW,MAAMC,SAAU,GAAhC,oCAKF,cAAClD,EAAA,EAAD,CAAQxG,MAAM,UAAUyG,QAAS,kBAAMoC,EAAS,KAAhD,kBAIA,cAACrC,EAAA,EAAD,CAAQxG,MAAM,UAAUyG,QAAS,kBAAM0C,GAAgB,IAAvD,+BAIA,cAACQ,EAAA,EAAD,CACEC,KAAMV,EACNW,QA/BU,SAACC,GACfA,aAAcC,UAAUD,IAC5Bd,EAAU,MACVC,EAAkB,OA6BV,kBAAgB,oBAChB,mBAAiB,0BAJnB,SAME,eAAC3B,EAAA,EAAD,CAAKJ,UAAW7B,EAAQ8C,MAAxB,UACE,cAACqB,EAAA,EAAD,CAAYQ,GAAG,0BAA0BC,GAAI,CAAEC,GAAI,GAAnD,gEAIA,cAAC3C,EAAA,EAAD,CACEJ,SAAU,SAACpC,GAAD,OAASsE,EAAWtE,EAAI6C,OAAOJ,UAG3C,cAAChB,EAAA,EAAD,CAAQxG,MAAM,UAAUyG,QAtCX,WACvBoC,EAAS,SAAD,OAAUO,IAClBD,GAAgB,IAoCN,qBAMJ,cAAC3C,EAAA,EAAD,CAAQxG,MAAM,UAAUyG,QApDJ,SAAC/E,GAAD,OAAWuH,EAAkBvH,EAAMyI,gBAoDvD,wBAIA,cAAC3D,EAAA,EAAD,CAAQxG,MAAM,UAAUyG,QAAS,kBAAMoC,EAAS,WAAhD,mBAIA,cAACrC,EAAA,EAAD,CAAQxG,MAAM,UAAUyG,QAAS,kBAAMoC,EAAS,WAAhD,2B,UC7GJvK,GAAYC,YAAW,CAC3BC,KAAM,CACJC,QAAS,OACTC,eAAgB,iBAElB0L,OAAQ,CACNpL,MAAO,OACPc,OAAQ,OACRuK,SAAU,QACVC,UAAW,SAEbC,WAAY,CACVvL,MAAO,QAETF,IAAK,CACHE,MAAO,OAETwL,YAAa,CACXxL,MAAO,UA8BIyL,GA1BD,WACZ,IAAMpF,EAAU/G,KAEhB,OACE,sBAAK4I,UAAW7B,EAAQ7G,KAAxB,UACE,qBAAK0I,UAAW7B,EAAQvG,MACxB,cAAC4L,GAAA,EAAD,CAAQxD,UAAW7B,EAAQ+E,OAAQO,IAAI,KAAKC,IAAI,gBAChD,qBAAK1D,UAAW7B,EAAQvG,MACxB,eAAC0K,EAAA,EAAD,CAAYtC,UAAW7B,EAAQkF,WAAYM,MAAO,UAAlD,4YAMuB,uBACrB,mBAAGC,KAAK,oCAAR,wCAGA,uBAVF,uBAaA,qBAAK5D,UAAW7B,EAAQvG,UC9BfiM,GAXH,WACV,OACE,sBAAK7D,UAAU,MAAf,UACE,cAAC,GAAD,IACA,cAAC,IAAD,CAAO4B,KAAK,SAASkC,UAAWP,KAChC,cAAC,IAAD,CAAOQ,OAAK,EAACnC,KAAK,IAAIkC,UAAW7F,IACjC,cAAC,IAAD,CAAO2D,KAAK,gBAAgBkC,UAAW7F,QCD9B+F,GAZS,SAAAC,GAClBA,GAAeA,aAAuBpB,UACxC,8BAAqBpF,MAAK,YAAkD,IAA/CyG,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOD,GACPE,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAQL,O,mBCCdM,IAAStF,OACP,cAAC,IAAMuF,WAAP,UACE,cAAC,KAAD,UACE,cAACC,GAAA,EAAD,UACE,cAAC,GAAD,UAINC,SAASC,eAAe,SAM1BX,O","file":"static/js/main.687d508f.chunk.js","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport {\n  disableBodyScroll,\n  enableBodyScroll,\n  clearAllBodyScrollLocks,\n} from \"body-scroll-lock\";\n\nimport { CompactPicker } from \"react-color\";\nimport { Button, Checkbox, Box, TextField } from \"@material-ui/core\";\n\nimport { drawCircle, getRandomColor } from \"../utils/Drawing\";\n// import { DrawPanel } from \"./DrawPanel\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  paintBar: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    gap: \"10px\",\n  },\n  cursorSize: {\n    width: \"60px\",\n  },\n});\n\nconst serverAddr = process.env.SERVER_ADDR || \"drawing.richwhite.net\";\nconst wsEndPoint = process.env.WEBSOCKET_ENDPOINT || \"websockettest\";\nlet roomId = \"\";\nlet CLEAR_CANVAS_CMD = JSON.stringify({ action: \"CLEAR\", topic: roomId });\n\nlet width = window.innerWidth - 15;\nlet height = window.innerHeight - 200;\n\nlet color = \"black\";\nlet hue = 0;\n\nlet mouseDown = false;\n\nlet wsClient = null;\nlet canvas;\n\nlet bezierCurveSet = new Set();\n\nlet canvasState = new Set();\nlet diffState = new Set();\n\nlet clearFlag = false;\n\nlet prevX = 0;\nlet prevY = 0;\n\nconst init = () => {\n  fetchCanvasState();\n\n  const websockConnStr = `wss://${serverAddr}/${wsEndPoint}`;\n  console.log(`Attempting to connect to websocket on: ${websockConnStr}`);\n  wsClient = new WebSocket(websockConnStr);\n\n  wsClient.onopen = () => {\n    console.log(\"WebSocket Client Connected\");\n  };\n\n  wsClient.onmessage = (msg) => {\n    const data = JSON.parse(msg.data);\n    const msgTopic = data.topic;\n    if (msgTopic !== roomId) return;\n\n    if (data?.type !== undefined) diffState.add(data);\n    else if (data?.action === \"CLEAR\") {\n      canvasState.clear();\n      clearFlag = true;\n      console.log(\"Clear called\");\n    }\n  };\n};\n\nconst postCircle = async (canvas, event, radius = 2, rainbowMode = false) => {\n  //event.preventDefault();\n\n  const rect = canvas.getBoundingClientRect();\n\n  let x = Math.floor(event.clientX - rect.left);\n  let y = Math.floor(event.clientY - rect.top);\n\n  if (event.type === \"touchmove\") {\n    x = event.touches[0].screenX;\n    y = event.touches[0].screenY;\n  }\n\n  color = rainbowMode ? incHue() : color;\n\n  let msg = {\n    topic: roomId,\n    type: \"CIRCLE\",\n    color: color,\n    radius: radius,\n    posX: x,\n    posY: y,\n  };\n  wsClient.send(JSON.stringify(msg));\n\n  if (mouseDown && prevX > 0 && prevY > 0) {\n    const prevRad = Math.sqrt(Math.pow(x - prevX, 2) + Math.pow(y - prevY, 2));\n\n    if (prevRad > 4) {\n      const slope = (y - prevY) / (x - prevX);\n\n      const cos = (x - prevX) / prevRad;\n      const sin = (y - prevY) / prevRad;\n\n      for (let i = 1; i <= prevRad / 2; i++) {\n        let interpolate = {\n          topic: roomId,\n          type: \"CIRCLE\",\n          color: color,\n          radius: radius,\n          posX: prevX + 2 * i * cos,\n          posY: prevY + 2 * i * sin,\n        };\n        wsClient.send(JSON.stringify(interpolate));\n      }\n    }\n  }\n\n  prevX = x;\n  prevY = y;\n};\n\nconst draw = (ctx) => {\n  if (clearFlag) {\n    console.log(\"Clear Canvas\");\n    clearLocalCanvas(ctx);\n    clearFlag = false;\n  }\n  // ctx.fillStyle = \"white\";\n  // ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n  Array.from(diffState).map((obj) => {\n    drawCircle({\n      ctx,\n      ...obj,\n    });\n  });\n\n  canvasState = new Set([...canvasState, ...diffState]);\n  diffState = new Set();\n  // Array.from(canvasState).map((obj) => {\n  //   drawCircle({\n  //     ctx,\n  //     ...obj,\n  //   });\n  // });\n};\n\nconst clearLocalCanvas = (ctx) => {\n  console.log(\"Clear Canvas called\");\n  ctx.fillStyle = \"white\";\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n};\n\nexport const clearCanvas = () => {\n  wsClient.send(CLEAR_CANVAS_CMD);\n};\n\n//\n//\nconst fetchCanvasState = () => {\n  const url = `https://letsdrawtogether.net/api/canvasState?roomId=${roomId}`;\n  fetch(url, {\n    method: \"GET\",\n  })\n    .then((res) => res.json())\n    .then((json) => {\n      json.map((a) => diffState.add(a));\n      // diffState = json;\n    });\n};\n\n//\n//\nconst incHue = () => {\n  hue += 1;\n  if (hue > 360) hue -= 360;\n  return `hsl(${hue}, 100%, 50%)`;\n};\n\n//\n//\nconst handleCanvasUp = (canvas, evt) => {\n  mouseDown = false;\n  prevX = 0;\n  prevY = 0;\n};\n\n//\n//\nconst resizeCanvas = (canvas, newWidth, newHeight) => {\n  canvas.width = newWidth;\n  canvas.height = newHeight;\n  width = newWidth;\n  height = newHeight;\n};\n\n//\n//\nexport const Canvas = ({ match, location }) => {\n  const classes = useStyles();\n  const canvasRef = useRef();\n\n  const [cursorSize, setCursorSize] = useState(2);\n  const [rainbowMode, setRainbowMode] = useState(false);\n\n  if (match?.params?.roomId !== undefined) roomId = match.params.roomId;\n  CLEAR_CANVAS_CMD = JSON.stringify({ action: \"CLEAR\", topic: roomId });\n\n  disableBodyScroll(canvasRef);\n  window.addEventListener(\"resize\", resizeCanvas, false);\n\n  //\n  const changeColor = (newColor, evt) => {\n    color = newColor.hex;\n  };\n\n  //\n  const changeCursorSize = (evt) => {\n    const val = evt.target.value;\n    try {\n      setCursorSize(parseInt(val));\n    } catch (err) {}\n  };\n\n  //\n  const changeRainbowMode = () => {\n    setRainbowMode(!rainbowMode);\n  };\n\n  //\n  const handleCanvasDown = async (canvas, evt) => {\n    postCircle(canvas, evt, cursorSize, rainbowMode);\n    mouseDown = true;\n  };\n\n  //\n  const handleCanvasMove = async (canvas, evt) => {\n    if (mouseDown) {\n      postCircle(canvas, evt, cursorSize, rainbowMode);\n    }\n  };\n\n  //\n  useEffect(async () => {\n    init(roomId);\n\n    canvas = canvasRef.current;\n\n    let requestId;\n\n    //render/update method, called on each key frame\n    const render = async () => {\n      const width = window.innerWidth - 15;\n      const height = window.innerHeight - 160;\n      // resizeCanvas(canvas, width, height);\n\n      const ctx = canvas.getContext(\"2d\");\n      draw(ctx);\n      requestId = requestAnimationFrame(render);\n    };\n\n    await render();\n    return () => {\n      cancelAnimationFrame(requestId);\n    };\n  });\n\n  //\n  return (\n    <div>\n      <Button onClick={clearCanvas}>Clear Canvas</Button>\n\n      <canvas\n        ref={canvasRef}\n        width={width}\n        height={height}\n        onMouseDown={(evt) => handleCanvasDown(canvas, evt)}\n        onMouseMove={(evt) => handleCanvasMove(canvas, evt)}\n        onMouseUp={(evt) => handleCanvasUp(canvas, evt)}\n        onMouseLeave={(evt) => handleCanvasUp(canvas, evt)}\n        onTouchStart={(evt) => handleCanvasDown(canvas, evt)}\n        onTouchMove={(evt) => handleCanvasMove(canvas, evt)}\n        onTouchEnd={(evt) => handleCanvasUp(canvas, evt)}\n      />\n\n      <div className={classes.paintBar}>\n        <CompactPicker onChange={changeColor} />\n\n        <div></div>\n        <Box>\n          <TextField\n            className={classes.cursorSize}\n            value={cursorSize}\n            label=\"cursor size\"\n            variant=\"outlined\"\n            onChange={changeCursorSize}\n          />\n\n          <Checkbox\n            value={rainbowMode}\n            label=\"Rainbow Mode\"\n            onChange={changeRainbowMode}\n          />\n        </Box>\n      </div>\n    </div>\n  );\n};\n","export const drawCircle = (props) => {\n  const { ctx, posX, posY, radius, color } = props;\n\n  ctx.beginPath();\n  ctx.arc(posX, posY, radius, 0, 2 * Math.PI);\n  ctx.fillStyle = color;\n  ctx.fill();\n  ctx.strokeStyle = color;\n  ctx.stroke();\n};\n\nexport const drawBezier = (props) =>{\n  const { ctx, posX, posY, radius, color } = props;\n\n  ctx.beginPath();\n  ctx.arc(posX, posY, radius, 0, 2 * Math.PI);\n  ctx.fillStyle = color;\n  ctx.fill();\n  ctx.strokeStyle = color;\n  ctx.stroke();\n}\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Modal from \"@material-ui/core/Modal\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n\nimport {clearCanvas} from \"./MainView\";\n\nconst useStyles = makeStyles({\n  toolBar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  selectedItem: {\n    color: \"blue\",\n    backgroundColor: \"gray\",\n  },\n\n  modal: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: 400,\n    bgcolor: \"background.paper\",\n    border: \"2px solid #000\",\n    boxShadow: 24,\n    p: 4,\n  },\n});\n\nexport const MenuBar = (props) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const gotoLink = (path) => history.push(path);\n\n  const [anchor, setAnchor] = useState(null);\n  const [loadSaveAnchor, setLoadSaveAnchor] = useState(null);\n  const [displayModal, setDisplayModal] = useState(false);\n\n  const [topicId, setTopicId] = useState(\"\");\n\n  const handleClick = (event) => setAnchor(event.currentTarget);\n  const handleLoadSaveClick = (event) => setLoadSaveAnchor(event.currentTarget);\n\n  const handleClose = (cb) => {\n    if (cb instanceof Function) cb();\n    setAnchor(null);\n    setLoadSaveAnchor(null);\n  };\n\n  const handleRoomChange = () => {\n    gotoLink(`/room/${topicId}`);\n    setDisplayModal(false);\n  };\n\n  return (\n    <div>\n      <AppBar position=\"static\" color=\"inherit\">\n        <Toolbar className={classes.toolBar}>\n          <Typography>\n            <Box fontWeight=\"600\" fontSize={24}>\n              letsdrawtogether.net\n            </Box>\n          </Typography>\n\n          <Button color=\"inherit\" onClick={() => gotoLink(\"\")}>\n            Home\n          </Button>\n\n          <Button color=\"inherit\" onClick={() => setDisplayModal(true)}>\n            Change Room/Topic\n          </Button>\n\n          <Modal\n            open={displayModal}\n            onClose={handleClose}\n            aria-labelledby=\"modal-modal-title\"\n            aria-describedby=\"modal-modal-description\"\n          >\n            <Box className={classes.modal}>\n              <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                Type a topic to navigate to a new Room/white Board\n              </Typography>\n\n              <TextField\n                onChange={(evt) => setTopicId(evt.target.value)}\n              ></TextField>\n\n              <Button color=\"inherit\" onClick={handleRoomChange}>\n                Ok\n              </Button>\n            </Box>\n          </Modal>\n\n          <Button color=\"inherit\" onClick={handleLoadSaveClick}>\n            Save Image\n          </Button>\n\n          <Button color=\"inherit\" onClick={() => gotoLink(\"/about\")}>\n            About\n          </Button>\n\n          <Button color=\"inherit\" onClick={() => gotoLink(\"/login\")}>\n            Login\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  avatar: {\n    width: \"20vw\",\n    height: \"20vw\",\n    maxWidth: \"200px\",\n    maxHeight: \"200px\",\n  },\n  typography: {\n    width: \"70vw\",\n  },\n  gap: {\n    width: \"5vw\",\n  },\n  static_gaps: {\n    width: \"50px\",\n  },\n});\n\nconst About = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.gap}></div>\n      <Avatar className={classes.avatar} alt=\"RW\" src=\"aboutme.png\" />\n      <div className={classes.gap} />\n      <Typography className={classes.typography} align={\"justify\"}>\n        Hello! My name is Richard White. I am a software and data engineer based\n        out of NJ. Computer science, education, and art are a few of my passions\n        I wanted to to bring together in this fun project. While this site is\n        still in very early development, I plan to incorporate more interaction,\n        support and new features/variants. If you have any questions or comments\n        you can reach me at: <br />\n        <a href=\"mailto:therichphysicist@gmail.com\">\n          therichphysicist@gmail.com\n        </a>\n        <br />\n        Thanks and enjoy!\n      </Typography>\n      <div className={classes.gap} />\n    </div>\n  );\n};\n\nexport default About;\n","import \"./App.css\";\nimport { useState } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { Canvas } from \"./components/MainView\";\nimport { MenuBar } from \"./components/MenuBar\";\nimport About from \"./components/About\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <MenuBar />\n      <Route path=\"/about\" component={About} />\n      <Route exact path=\"/\" component={Canvas} />\n      <Route path=\"/room/:roomId\" component={Canvas} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { CookiesProvider } from \"react-cookie\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <CookiesProvider>\n        <App />\n      </CookiesProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}